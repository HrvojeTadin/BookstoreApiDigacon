@host = https://localhost:7014
@token = 'put your token here'

###############################################################################
# 0. LOGIN AS READER (Read-only)
###############################################################################

POST {{host}}/api/auth/login
Content-Type: application/json

{
  "username": "reader",
  "password": "reader123"
}

###############################################################################
# 1. GET ALL BOOKS  (requires Read role)
###############################################################################

GET {{host}}/api/books
Authorization: Bearer {{token}}
Accept: application/json

### 2. GET BOOK BY ID (valid)
GET {{host}}/api/books/1
Authorization: Bearer {{token}}
Accept: application/json

### 3. GET BOOK BY ID (not found)
GET {{host}}/api/books/9999
Authorization: Bearer {{token}}
Accept: application/json

### 4. GET TOP‑10‑RATED BOOKS
GET {{host}}/api/books/top-10-rated-books
Authorization: Bearer {{token}}
Accept: application/json

###############################################################################
# 5. LOGIN AS WRITER (ReadWrite)
###############################################################################

POST {{host}}/api/auth/login
Content-Type: application/json

{
  "username": "writer",
  "password": "writer123"
}


###############################################################################
# 6. CREATE BOOK (success)
###############################################################################

POST {{host}}/api/books
Authorization: Bearer {{writeToken}}
Content-Type: application/json

{
  "title": "Automated Testing Guide",
  "price": 29.99,
  "authorNames": ["Existing Author Name"],
  "genreNames":  ["Existing Genre Name"]
}

###############################################################################
# 7. CREATE BOOK (validation error: missing title)
###############################################################################

POST {{host}}/api/books
Authorization: Bearer {{writeToken}}
Content-Type: application/json

{
  "title": "",
  "price": 19.99,
  "authorNames": ["Some Author"],
  "genreNames":  ["Some Genre"]
}

###############################################################################
# 8. UPDATE BOOK PRICE (success)
###############################################################################

PUT {{host}}/api/books/1/price
Authorization: Bearer {{writeToken}}
Content-Type: application/json

{
  "newPrice": 77.99
}

### Verify update  
GET {{host}}/api/books/1
Authorization: Bearer {{token}}
Accept: application/json

###############################################################################
# 9. UPDATE BOOK PRICE (validation error: negative price)
###############################################################################

PUT {{host}}/api/books/1/price
Authorization: Bearer {{writeToken}}
Content-Type: application/json

{
  "newPrice": -5
}

###############################################################################
# 10. UPDATE BOOK PRICE (not found)
###############################################################################

PUT {{host}}/api/books/9999/price
Authorization: Bearer {{writeToken}}
Content-Type: application/json

{
  "newPrice": 19.99
}
